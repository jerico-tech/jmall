# Spring boot集成Mybatis（注解版和XML版）
> 同一工程中同时使用注解版和XML版。以本工程为例
### 添加依赖
    <dependency>
        <groupId>org.mybatis.spring.boot</groupId>
        <artifactId>mybatis-spring-boot-starter</artifactId>
        <version>2.1.0</version>
    </dependency>

    <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <scope>runtime</scope>
    </dependency> 
### application.yml文件配置
    spring:
      datasource:
        username: root
        password: 123456
        url: jdbc:mysql://127.0.0.1:3306/mall?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&useSSL=true
        driver-class-name: com.mysql.cj.jdbc.Driver
    # 配置扫描xml文件的路径
    mybatis:
      mapper-locations: classpath:/mapper/*.xml
      config-location:  classpath:/config/mybatis-config.xml
### mybatis-config.xml配置
    <?xml version="1.0" encoding="UTF-8"?>
    <!DOCTYPE configuration
            PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
            "http://mybatis.org/dtd/mybatis-3-config.dtd">
    <configuration>
        <!--配置驼峰属性自动映射，例如实体中属性为 userSex,数据库属性为 user_sex，MyBatis 默认是不能自动转换的。我们可以在application.yml中配置 mybatis.configuration.map-underscore-to-camel-case=true或在该文件中进行如下配置，实现自动映射。如果不进行此配置，通常我们要自定义以下结果集映射： -->
        <settings>
            <setting name="mapUnderscoreToCamelCase" value="true"/>
        </settings>
        <typeAliases>
            <package name="com.jerico.jmall.domain.entity"/>
        </typeAliases>
    </configuration>
### Configuration配置
在Configuration类中配置扫描UserDAO类，使注解方法生效。@MapperScan("com.jerico.jmall.dao")

        @SpringBootApplication
        @MapperScan("com.jerico.jmall.dao")
        public class JmallApplication {
            public static void main(String[] args) {
                SpringApplication.run(JmallApplication.class, args);
            }
        }

定义实体类UserEntity；

定义Mapper（com.jerico.jmall.dao包下）。以DAO结尾的接口为注解版；以Mapper结尾的接口为XML版；
比如本工程中的UserDAO和UserMapper。




### 参考
http://www.itcast.cn/news/20180921/17273351782.shtml
